box: golang

dev:
  steps:
    - setup-go-workspace:
        package-dir: github.com/atjapan2015/gostudy/firstwercker
    - script:
        name: env
        code: env
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          glide install
    - internal/watch:
        code: go run main.go
        reload: true
build:
  steps:
    - setup-go-workspace:
        package-dir: github.com/atjapan2015/gostudy/firstwercker

    - script:
        name: env
        code: env

    - script:
        name: go get
        code: |

          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          glide install

    # Build the project
    - script:
        name: go build
        code: |
          go build

    # Test the project
#    - script:
#        name: go test
#        code: |
#          go test -v $(glide novendor)

    - script:
        name: copy files to wercker output
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}
    
#    - script:
#        name: copy files to wercker output
#        code: |
#          cp -R ./ $(WERCKER_OUTPUT_DIR)

deploy:
  steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        cmd: /pipeline/source/gostudy/firstwercker
        port: "8080"
        tag: latest
        repository: atjapan2015/book-hello
        registry: https://registry.hub.docker.com

#    - cng/cf-deploy:
#        api: $API
#        user: $USER
#        password: $PASSWORD
#        org: $ORG
#        space: $SPACE
#        appname: wercker-step-hello
#        docker_image: atjapan2015/book-hello
       

